@model AcademicJournal.ViewModels.EvaluateAssignmentVM

@{
    ViewBag.Title = "Evaluate";
}

<h2>Evaluate</h2>

<div>
    <h4>Assignment</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Assignment.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Assignment.Title)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Assignment.Student.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Assignment.Student.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Assignment.Student.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Assignment.Student.LastName)
        </dd>

        <dt>
            Task file@*@Html.DisplayNameFor(model => model.Assignment.TaskFile.UploadFile)*@
        </dt>

        <dd>
            @if (Model.Assignment.TaskFile != null)
            {
                @Html.ActionLink(Html.DisplayFor(model => model.Assignment.TaskFile.FileName).ToString(), "DownloadTaskFile", "Assignments", new { id = Model.Assignment.AssignmentId }, null)
            }
        </dd>
        <dt>
            Submitted file @*Html.DisplayNameFor(model => model.Assignment.SubmitFile.UploadFile)*@
        </dt>

        <dd>          
            @if (Model.Assignment.SubmitFile != null)
            {
                @Html.ActionLink(Html.DisplayFor(model => model.Assignment.SubmitFile.FileName).ToString(), "DownloadSubmitFile", "Assignments", new { id = Model.Assignment.AssignmentId }, null)
            }
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Assignment.Completed)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Assignment.Completed)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Assignment.Grade)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Assignment.Grade)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Assignment.Created)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Assignment.Created)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Assignment.DueDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Assignment.DueDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Assignment.Submitted)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Assignment.Submitted)
        </dd>

    </dl>
</div>
<h3>Evaluate!</h3>
@using (Html.BeginForm("Evaluate", "Assignments", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Assignment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            @Html.LabelFor(model => model.Grade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Grade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Grade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}
