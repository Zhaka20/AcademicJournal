@model AcademicJournal.ViewModels.StudentMentorVM
@{
    ViewBag.Title = "Student";
}

<h2>Student</h2>

<div>
    <h4>Student</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Student.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Student.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Student.LastName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Student.LastName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Student.Email)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Student.Email)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Student.PhoneNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Student.PhoneNumber)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Details", "Details", "Students", new { id = Model.Student.Id }, null) |
    @Html.ActionLink("Back to Home", "Home", "Mentors")
</p>

<br />
<hr />
<h3>Assignments and submissions...</h3>
<p>@Html.ActionLink("Create and give new assignment", "CreateAndAssignToSingleUser", "Assignments", new {id = Model.Student.Id }, null)
      or
   @Html.ActionLink("Give an existing Assignment(s)", "AssignToStudent", "Assignments", new { id = Model.Student.Id }, null)</p>

<table class="table">
    <tr>       
        <th>
            @Html.DisplayNameFor(model => model.AssignmentModel.Title)
        </th>
        <th>
            Task file
        </th>
        <th>
            Submitted file
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SubmissionModel.Completed)
        </th>
        <th colspan="2">
            @Html.DisplayNameFor(model => model.SubmissionModel.Grade)
        </th>     
        <th></th>
    </tr>

    @foreach (var item in Model.Student.Submissions)
    {
        <tr>          
            <td>
                @Html.DisplayFor(_ => item.Assignment.Title)
            </td>
            <td>
                @if (item.Assignment.AssignmentFile != null)
                {
                    @Html.ActionLink(item.Assignment.AssignmentFile.FileName, "DownloadAssignmentFile", "Assignments", new { id = item.AssignmentId }, null)
                }
            </td>
            <td>
                @if (item.SubmitFile != null)
                {
                    @Html.ActionLink(item.SubmitFile.FileName, "DownloadSubmissionFile", "Submissions", new { assignmentId = item.AssignmentId, studentId = item.StudentId }, null)
                }
            </td>
            <td>
                @Html.DisplayFor(_ => item.Completed)
                @using (Html.BeginForm("ToggleStatus","Submissions", new { assignmentId =  item.AssignmentId, studentId = item.StudentId }, FormMethod.Post, new { @class = "toggle-btn-form" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="submit" value="Toggle" class="btn btn-xs toggle-btm" /> 
                }
            </td>
                <td width="3">@Html.DisplayFor(_ => item.Grade)</td>
                <td>@Html.ActionLink(item.Grade == null ? "Evaluate" : "Reevaluate" , "Evaluate", "Submissions", new { assignmentId = item.AssignmentId, studentId = item.StudentId }, null)</td>
            <td>
                @Html.ActionLink("Edit", "Edit", "Submissions", new { assignmentId = item.AssignmentId, studentId = item.StudentId }, null) |
                @Html.ActionLink("Details", "Details", "Submissions", new { assignmentId = item.AssignmentId, studentId = item.StudentId }, null) |
                @Html.ActionLink("Delete", "Delete", "Submissions", new { assignmentId = item.AssignmentId, studentId = item.StudentId }, null)
            </td>
        </tr>
    }

</table>